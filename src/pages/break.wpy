<template>
  <view>
    <view class="section">
      <view>破壳记录
        <text> / Sprout</text>
      </view>
      <view>小生命已经破壳而出了吗~</view>
    </view>
    <view class="form">
      <view class="field">
        <view class="label">小猫数量 (选填):</view>
        <view class="value">
          <input type="number" @input="onCatNumberChange">
        </view>
      </view>
      <view class="field">
        <view class="label">破壳日期:</view>
        <view class="value">
          <picker mode="date" @change="onBreakChange" end="{{today}}">
            <image src="../assets/images/time.svg"></image>
            <text>{{ difference }}</text>
          </picker>
        </view>
      </view>
    </view>

    <view class="confirm">
      <view class="btn" @tap="onConfirm">
        <text>破壳啦</text>
        <image src="../assets/images/birthday-and-party.svg"></image>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import request from '@/utils/request'

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '破壳记录'
  }

  components = {}

  mixins = []

  data = {
    id: null,
    today: null,
    difference: null,
    model: {
      cat_number: null,
      cracked_at: null
    }
  }

  computed = {}

  methods = {
    onBreakChange(e) {
      this.model.cracked_at = e.detail.value
      this.dateDifference()
    },

    async onConfirm() {
      await wepy.showLoading()
      await request(`/eggs/${this.id}/cracked`, this.model).put()
      await wepy.hideLoading()
      await wepy.showToast({
        title: '破壳成功啦~',
        duration: 1000,
        success: function() {
          setTimeout(function() {
            wx.redirectTo({url: '/pages/index'})
          }, 1000)
        }
      })
    },
    onCatNumberChange(e) {
      this.model.cat_number = e.detail.value
    }
  }

  events = {}

  dateDifference() {
    var d1 = Date.parse(this.model.cracked_at)
    var d2 = Date.parse(this.today)
    var dateSpan = d2 - d1
    dateSpan = Math.abs(dateSpan)
    var difference = Math.floor(dateSpan / (24 * 3600 * 1000))

    if (difference === 0) {
      this.difference = '今天'
    } else {
      this.difference = difference + ' 天前'
    }
  }

  onLoad(options) {
    this.id = options.id
    var timestamp = Date.parse(new Date())
    var date = new Date(timestamp)
    var Y = date.getFullYear()
    var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1)
    var D = date.getDate() < 10 ? '0' + date.getDate() : date.getDate()
    this.today = Y + '-' + M + '-' + D
    this.model.cracked_at = this.today
    this.dateDifference()
  }
}
</script>

<style lang="scss" scoped>
  .section {
    padding-left: 12px;

    view {
      text {
        color: #a4adb7;
        display: inline;
        font-size: 10px;
        margin-left: 2px;
        word-spacing: 6px;
      }
    }

    view:first-child {
      display: block;
      color: #101346;
      font-size: 20px;
      font-weight: 700;
      margin-bottom: 6px;
    }

    view:last-child {
      color: #a4adb7;
      display: block;
      font-size: 12px;
      font-weight: 500;
      margin-bottom: 12px;
    }
  }

  .confirm {
    margin-top: 24px;
    text-align: center;

    .btn {
      width: 80%;
      margin: 0 auto;
      color: #ffffff;
      font-size: 14px;
      font-weight: 700;
      padding: 14px 32px;
      border-radius: 20px;
      background: #71c9ce;
      display: inline-block;
      box-shadow: 0.08533rem 0.21333rem 0.64rem 0 #71c9ce;

      image {
        width: 16px;
        height: 16px;
        margin-left: 6px;
        vertical-align: -3px;
      }
    }
  }

  .form {
    padding: 16px;
    margin-top: 24px;
    border-radius: 12px;
    background: rgba(255, 255, 255, 0.85);
    box-shadow: rgba(0, 0, 0, 0.04) 0px 1px 1px 0px;

    .field {
      margin-bottom: 28px;

      &:last-child {
        margin-bottom: 0;
      }

      .label {
        color: #101346;
        font-size: 14px;
        font-weight: 500;
        padding-left: 10px;
        position: relative;
        margin-bottom: 12px;

        &:before {
          left: 0;
          top: 50%;
          width: 3px;
          content: '';
          height: 80%;
          border-radius: 3px;
          position: absolute;
          background: #71c9ce;
          transform: translateY(-50%);
          box-shadow: 0.08533rem 0.21333rem 0.64rem 0 #e3fdfd;
        }
      }

      .value {
        input {
          height: 1.8rem;
          font-size: 14px;
          font-weight: 500;
          padding: 6px 12px;
          border-radius: 8px;
          line-height: 1.8rem;
          border: 1px solid #e7eef7;
        }

        picker {
          padding: 6px 12px;
          border-radius: 6px;
          background: #f5f7fd;
          display: inline-block;

          text {
            color: #57b59a;
            font-size: 14px;
            font-weight: 500;
          }

          image {
            width: 20px;
            height: 20px;
            margin-right: 6px;
            vertical-align: -4.5px;
          }
        }
      }
    }
  }
</style>
