<template>
  <view>
    <view class="section">
      <view>新增记录
        <text> / Create a egg</text>
      </view>
      <view>新增一条孕期记录</view>
    </view>
    <view class="form">
      <view class="field">
        <view class="label">母猫名称:</view>
        <view class="value">
          <input type="text" @change="onFemaleChange">
          <image mode="aspectFill" class="avatar" src="{{ model.female_avatar }}" @tap="uploadTap('female')"/>
        </view>
      </view>
      <view class="field">
        <view class="label">公猫名称:</view>
        <view class="value">
          <input type="text" @change="onMaleChange">
          <image mode="aspectFill" class="avatar" data-gender="male" src="{{ model.male_avatar }}" @tap="uploadTap('male')"/>
        </view>
      </view>
      <view class="field">
        <view class="label">怀孕周期:</view>
        <view class="value" style="display: flex;align-items: center;">
          <input style="width: 48px;text-align: center;display: inline-block;" type="number" value="{{ model.pregnancy }}" @change="onPregnancyChange">
          <text style="font-size: 14px;font-weight: 500;vertical-align: 16px;margin-left: 10px;">天</text>
        </view>
      </view>
      <view class="field">
        <view class="label">配种日期:</view>
        <view class="value">
          <picker mode="date" @change="breedingChange" end="{{today}}">
            <image src="../assets/images/time.svg"></image>
            <text>{{ difference }}</text>
          </picker>
        </view>
      </view>
    </view>

    <view class="confirm">
      <view class="btn" @tap="onConfirm">
        <image src="../assets/images/egg.svg"></image>
        <text>保存记录</text>
      </view>
    </view>
  </view>
  <view class="cropper-panel" wx:if="{{showCropper}}">
    <cropper :options="cropperOpt" @beforeImageLoad="bl"></cropper>
    <view class="image-notice">请使用含有猫咪的图片~</view>
    <view class="image-notice">如识别异常请尝试调整裁剪部分或跳过</view>
    <view class="operate">
      <button class="cancel" @tap="cancel">取消</button>
      <button @tap="getCropperImage">确认</button>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import request from '@/utils/request'
import Cropper from '@/components/wepy-com-cropper'
const device = wx.getSystemInfoSync()
const width = device.windowWidth
const height = device.windowHeight - 200

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '新增记录'
  }

  components = {
    cropper: Cropper
  }

  mixins = []

  data = {
    today: null,
    difference: null,
    model: {
      pregnancy: 64,
      male_name: null,
      male_avatar: 'https://m1-1253159997.image.myqcloud.com/images/UnNNx2qg8X0oprnzHFwdUBplO4Ev5eWYmxbRaC9l.jpeg',
      female_name: null,
      female_avatar: 'https://m1-1253159997.image.myqcloud.com/images/dX2GQGfuBIV5uPOjk11OdPE5Qx3xJEhFv8ROonZp.jpeg',
      breeding_at: null
    },
    selectedGender: null,
    showCropper: false,
    cropperOpt: {
      width,
      height,
      scale: 2.5,
      zoom: 8,
      cut: {
        x: (width - 200) / 2,
        y: (height - 200) / 2,
        width: 200,
        height: 200
      },
      show: false
    }
  }

  computed = {}

  methods = {
    breedingChange(e) {
      this.model.breeding_at = e.detail.value
      this.dateDifference()
    },

    async onConfirm() {
      await wepy.showLoading()
      await request('/eggs', this.model).post()
      await wepy.hideLoading()
      await wepy.showToast({
        title: '新增记录成功',
        duration: 1000,
        success: function() {
          setTimeout(function() {
            wx.navigateBack()
          }, 1000)
        }
      })
    },
    onFemaleChange(e) {
      this.model.female_name = e.detail.value
    },
    onMaleChange(e) {
      this.model.male_name = e.detail.value
    },
    onPregnancyChange(e) {
      var pregnancy = e.detail.value

      if (pregnancy <= 0) {
        return wx.showToast({
          icon: 'error',
          title: '请输入大于零的日期'
        })
      }

      this.model.pregnancy = pregnancy
    },

    uploadTap (gender) {
      wx.chooseImage({
        count: 1,
        sizeType: ['compressed'], // 只使用压缩图，加快文件上传速度及模型识别速度。另一方面，识别对于图片质量并无要求
        sourceType: ['album', 'camera'],
        success: (res) => {
          const src = res.tempFilePaths[0]
          //  获取裁剪图片资源后，给data添加src属性及其值
          this.showCropper = true
          this.selectedGender = gender
          this.$apply()
          this.$invoke('cropper', 'pushOrigin', src)
        }
      })
    },
    cancel () {
      this.showCropper = false
      this.$apply()
    },
    getCropperImage () {
      this.$invoke('cropper', 'getCropperImage').then((src) => {
        wepy.showLoading({
          title: '图片识别中...'
        })
        // 调用上传图片接口
        request('/eggs/upload-avatar', {
          'file_path': src
        }).upload().then(data => {
          if (data.url) {
            if (this.selectedGender === 'female') {
              this.model.female_avatar = data.url
            } else if (this.selectedGender === 'male') {
              this.model.male_avatar = data.url
            }
            this.showCropper = false
            this.$apply()
          }
          wepy.hideLoading()
        })
      }).catch(err => {
        console.log('获取图片地址失败，请稍后重试', err)
        wepy.hideLoading()
      })
    }
  }

  events = {}

  dateDifference() {
    var d1 = Date.parse(this.model.breeding_at)
    var d2 = Date.parse(this.today)
    var dateSpan = d2 - d1
    dateSpan = Math.abs(dateSpan)
    var difference = Math.floor(dateSpan / (24 * 3600 * 1000))

    if (difference === 0) {
      this.difference = '今天'
    } else {
      this.difference = difference + ' 天前'
    }
  }

  onLoad() {
    var timestamp = Date.parse(new Date())
    var date = new Date(timestamp)
    var Y = date.getFullYear()
    var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1)
    var D = date.getDate() < 10 ? '0' + date.getDate() : date.getDate()
    this.today = Y + '-' + M + '-' + D
    this.model.breeding_at = this.today
    this.dateDifference()
  }
}
</script>

<style lang="scss" scoped>
  .section {
    padding-left: 12px;

    view {
      text {
        color: #a4adb7;
        display: inline;
        font-size: 10px;
        margin-left: 2px;
        word-spacing: 6px;
      }
    }

    view:first-child {
      display: block;
      color: #101346;
      font-size: 20px;
      font-weight: 700;
      margin-bottom: 6px;
    }

    view:last-child {
      color: #a4adb7;
      display: block;
      font-size: 12px;
      font-weight: 500;
      margin-bottom: 12px;
    }
  }

  .confirm {
    margin-top: 24px;
    text-align: center;

    .btn {
      width: 80%;
      margin: 0 auto;
      color: #ffffff;
      font-size: 14px;
      font-weight: 700;
      padding: 14px 32px;
      border-radius: 20px;
      background: #71c9ce;
      display: inline-block;
      box-shadow: 0.08533rem 0.21333rem 0.64rem 0 #71c9ce;

      image {
        width: 16px;
        height: 16px;
        margin-right: 6px;
        vertical-align: -3.5px;
      }
    }
  }

  .form {
    padding: 16px;
    margin-top: 24px;
    border-radius: 12px;
    background: rgba(255, 255, 255, 0.85);
    box-shadow: rgba(0, 0, 0, 0.04) 0px 1px 1px 0px;

    .field {
      margin-bottom: 28px;

      &:last-child {
        margin-bottom: 0;
      }

      .label {
        color: #101346;
        font-size: 14px;
        font-weight: 500;
        padding-left: 10px;
        position: relative;
        margin-bottom: 12px;

        &:before {
          left: 0;
          top: 50%;
          width: 3px;
          content: '';
          height: 80%;
          border-radius: 3px;
          position: absolute;
          background: #71c9ce;
          transform: translateY(-50%);
          box-shadow: 0.08533rem 0.21333rem 0.64rem 0 #e3fdfd;
        }
      }

      .value {
        display: flex;
        align-items: center;
        input {
          height: 1.8rem;
          font-size: 14px;
          font-weight: 500;
          padding: 6px 12px;
          border-radius: 8px;
          line-height: 1.8rem;
          border: 1px solid #e7eef7;
          width: 200px;
        }

        .avatar {
          width: 40px;
          height: 40px;
          background: #e3fdfd;
          border-radius: 50px;
          margin-left: 10px;
        }

        picker {
          padding: 6px 12px;
          border-radius: 6px;
          background: #f5f7fd;
          display: inline-block;

          text {
            color: #57b59a;
            font-size: 14px;
            font-weight: 500;
          }

          image {
            width: 20px;
            height: 20px;
            margin-right: 6px;
            vertical-align: -4.5px;
          }
        }
      }
    }
  }

  .cropper-panel {
    position: fixed;
    top: 0;
    left: 0;
    background: black;
    padding-bottom: 300px;
    z-index: 1000;

    .image-notice {
      text-align: center;
      text-justify: auto;
      color: #ffffff;
    }

    .operate {
      position: fixed;
      bottom: 100px;
      display: flex;
      justify-content: space-between;
      width: 100%;
      z-index: 1001;

      button {
        width: 150px;
        background: #70C9CD;
        color: #ffffff;
      }

      .cancel {
        background: #4d555f;
      }
    }
  }
</style>
